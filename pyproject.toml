[tool.poetry]
name = "rat-Nico&Manu"
version = "1.0.0"
description = "RAT pour projet scolaire python par nico & manu"
authors = ["Nicolas BOIVIN <nboivin@myges.fr>"]
readme = "README.md"
repository = "https://github.com/NicolasBoivin/ratfinal/"
documentation = "https://github.com/NicolasBoivin/ratfinal/readme.md"
keywords = ["rat", "remote", "administration", "python",]

[tool.poetry.dependencies]
python = "^3.8"
cryptography = "^41.0.0"
Pillow = {version = "^10.0.0", optional = true}
pyaudio = {version = "^0.2.11", optional = true}
opencv-python = {version = "^4.8.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
pre-commit = "^3.3.0"
memory-profiler = "^0.60.0"
colorlog = "^6.7.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.1.0"
sphinx-rtd-theme = "^1.3.0"

[tool.poetry.extras]
multimedia = ["Pillow", "pyaudio", "opencv-python"]
full = ["Pillow", "pyaudio", "opencv-python"]

[tool.poetry.scripts]
rat-server = "simple_server:main"
rat-client = "simple_client:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# === CONFIGURATION DES OUTILS ===

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Dossiers Ã  exclure
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["rat_projet"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    "venv",
]